name: Build Installers

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  #schedule:
  #  - cron: '0 10 1/6 * *'

jobs:
  build-linux-installer:
    name: Build Installer on Linux
    runs-on: ubuntu-latest
    steps:

# SETUP BUILD ENVIRONMENT
    - id: checkout-code
      name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: main
    - id: setup-jdk
      name: Setup JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 21
        cache: maven

# BUILD FOR DISTRIBUTION
    - id: build
      name: Build distribution
      run: |
        mvn -B -V clean verify
        #jpackage --verbose "@jpackage.cfg" "@jpackage-linux.cfg"
        ls -lR target

# SAVE INSTALLER
    - id: upload-installer
      name: Upload installer
      uses: actions/upload-artifact@v4
      with:
        path: ./target/hello-world-javafx-jpackage*.zip
        name: linux-installer
        retention-days: 1


  build-windows-installer:
    name: Build Installer on Windows
    runs-on: windows-latest
    steps:

# SETUP BUILD ENVIRONMENT
    - id: checkout-code
      name: Checkout code
      uses: actions/checkout@v4
    - id: setup-jdk
      name: Setup JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 21
        cache: maven

# BUILD FOR DISTRIBUTION
    - id: build
      name: Build distribution
      run: |
        mvn -B -V clean verify
        Get-ChildItem target -recurse
    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@ed72a3242c5331913886b41ca9ea66c9195ebdaa

# SAVE INSTALLER
    - id: upload-installer
      name: Upload installer
      uses: actions/upload-artifact@v4
      with:
        path: ./target/hello-world-javafx-jpackage*.zip
        name: windows-installer
        retention-days: 1


#  create-release:
#    name: Create Release
#    runs-on: ubuntu-latest
#    needs: [build-linux-installer, build-windows-installer]
#    steps:

# DOWNLOAD INSTALLERS
#    - id: download-linux-installer
#      name: Download Linux installer
#      uses: actions/download-artifact@v3
#      with:
#        name: linux-installer
#
#    - id: download-windows-installer
#      name: Download Windows installer
#      uses: actions/download-artifact@v3
#      with:
#        name: windows-installer
#
#    - id: rename-downloaded-files
#      name: Rename downloaded files
#      run: |
#        ls -alR
#        #mv hello-world-javafx-jpackage_1.0.0-1_amd64.deb hello-world-javafx-jpackage-1.0.0.deb
#        ls -alR

# CREATE GITHUB RELEASE AND ADD ASSETS
#    - id: tag
#      name: Move example-release tag
#      shell: bash
#      if: false
#      run: |
#        # Move tag
#        git tag -d example-release
#        git push --delete origin example-release
#        git tag -a example-release -m "Example of a Release"
#        git push --follow-tags
#    - id: create-release
#      name: Create GitHub release
#      uses: actions/create-release@latest
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        tag_name: example-release
#        release_name: example-release
#        draft: false
#        prerelease: false
#    - id: release-linux-installer
#      name: Release Linux installer
#      uses: actions/upload-release-asset@latest
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.create-release.outputs.upload_url }}
#        asset_path: hello-world-javafx-jpackage-1.0.0.deb
#        asset_name: hello-world-javafx-jpackage-1.0.0.deb
#        asset_content_type: application/x-binary
#    - id: release-windows-installer
#      name: Release Windows installer
#      uses: actions/upload-release-asset@latest
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      with:
#        upload_url: ${{ steps.create-release.outputs.upload_url }}
#        asset_path: hello-world-javafx-jpackage-1.0.0.msi
#        asset_name: hello-world-javafx-jpackage-1.0.0.msi
#        asset_content_type: application/x-binary