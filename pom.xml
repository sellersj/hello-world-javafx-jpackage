<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.github.sellersj</groupId>
  <artifactId>hello-world-javafx-jpackage</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <name>hello world javafx jpackage example</name>
  <description>A tool to demonstrate a javaFX using native packaging</description>
  <packaging>jar</packaging>
  <properties>
    <maven.compiler.release>25</maven.compiler.release>
    <maven.compiler.showDeprecation>true</maven.compiler.showDeprecation>
    <maven.compiler.showWarnings>true</maven.compiler.showWarnings>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <junit.version>6.0.0</junit.version>
    <javafx.version>26-ea+14</javafx.version>
    <jpackage.input>${project.build.directory}/jpackage-input</jpackage.input>
  </properties>
  <dependencies>
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <version>${javafx.version}</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.5.4</version>
          <configuration>
            <runOrder>hourly</runOrder>
            <!-- Activate the use of TCP to transmit events to the plugin -->
            <forkNode
              implementation="org.apache.maven.plugin.surefire.extensions.SurefireForkNodeFactory" />
          </configuration>
        </plugin>
        <plugin>
          <groupId>com.github.akman</groupId>
          <artifactId>jpackage-maven-plugin</artifactId>
          <version>0.1.5</version>
          <configuration>
            <name>${project.artifactId}</name>
            <!-- verison cannot contain -SNAPSHOT and must be 3 digits -->
            <!--            <appversion>${project.version}</appversion>-->
            <appversion>1.0.0</appversion>

            <description>${project.description}</description>

            <!-- default of PLATFORM does not work on macos -->
            <type>IMAGE</type>

            <!-- TODO put the jar and any needed libraries into a folder for the
            'input' but not everything -->
            <input>${jpackage.input}</input>

            <verbose>true</verbose>

            <!--
                Specifies the main module (and optionally main class) of
                the application. This module must be located on the module path.
                When this option is specified, the main module will be linked
                in the Java runtime image.
                Either module or main-jar option can be specified
                but not both.
              -->
            <!--
            <module>${project.artifactId}/com.example.jpackagejavafx.HelloWorld</module>-->

            <!-- I had trouble getting this to work using the jar name and
            javaFX -->
            <!-- just the name of the jar without the path -->
            <!--
            <mainjar>${project.build.finalName}.${project.packaging}</mainjar>-->
            <!--            <mainclass>com.example.jpackagejavafx.HelloWorld</mainclass>-->

            <!-- using a module which needs to match module-info.java -->
            <module>
              com.github.sellersj.helloworld.javafx.jpackage/com.example.jpackagejavafx.HelloWorld</module>
            <modulepath>
              <dependencysets>
                <dependencyset>
                  <includeoutput>true</includeoutput>
                  <excludeautomatic>true</excludeautomatic>
                </dependencyset>
              </dependencysets>
            </modulepath>

            <javaoptions>-Dfile.encoding=UTF-8 -Xms256m -Xmx512m</javaoptions>
          </configuration>
          <dependencies>
            <!-- need a newer version of asm to support java 21 -->
            <dependency>
              <groupId>org.ow2.asm</groupId>
              <artifactId>asm</artifactId>
              <version>9.9</version>
            </dependency>
          </dependencies>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.14.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.4.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.5.0</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-toolchains-plugin</artifactId>
        <version>3.2.0</version>
        <configuration>
          <toolchains>
            <jdk>
              <version>${maven.compiler.release}</version>
            </jdk>
          </toolchains>
        </configuration>
        <executions>
          <execution>
            <?m2e ignore?>
            <goals>
              <goal>toolchain</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.9.0</version>
        <executions>
          <execution>
            <id>copy-dependencies-to-jpackage-output</id>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <includeScope>compile</includeScope>
              <outputDirectory>${jpackage.input}</outputDirectory>
            </configuration>
          </execution>
          <!-- copy the packaged jar into the correct location -->
          <execution>
            <?m2e ignore?>
            <id>copy-final-jar-to-jpackage-output</id>
            <phase>verify</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>${project.artifactId}</artifactId>
                  <version>${project.version}</version>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${jpackage.input}</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.akman</groupId>
        <artifactId>jpackage-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>jpackage-image</id>
            <phase>verify</phase>
            <goals>
              <goal>jpackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.7.1</version>
        <configuration>
          <descriptors>
            <descriptor>src/assembly/jpackage-assembly.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>verify</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
